#include "Stage.h"
#include <assert.h>

namespace
{
	const int MAP_WIDTH = { 32 };
	const int MAP_HEIGHT = { 22 };
	const int myMap[MAP_HEIGHT][MAP_WIDTH]
		{
			{102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102},
			{102,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,102},
			{102,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,102},
			{102,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,102},
			{102,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,102},
			{102,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,102},
			{102,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,102},
			{102,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,102},
			{102,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,102},
			{102,105,105,105,105,105,105,105,105,105,105,105,105,105,22,23,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,102	},
			{102,105,105,105,105,105,105,105,105,105,105,105,105,105,38,39,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,102	},
			{102,105,105,105,105,105,105,105,105,105,105,105,105,105,53,53,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,102	},
			{102,105,105,105,105,105,105,105,105,105,105,105,105,105,53,53,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,102	},
			{102,105,105,105,105,105,105,105,105,105,105,105,105,105,53,53,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,102	},
			{102,105,105,105,105,105,105,105,105,105,105,105,105,105,53,53,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,102	},
			{102,105,105,105,105,105,105,105,105,105,105,105,105,105,53,53,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,102	},
			{102,105,105,105,105,105,105,105,105,105,105,105,105,105,53,53,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,102	},
			{102,105,105,105,105,105,105,105,105,105,105,105,105,105,53,53,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,102	},
			{102,105,105,105,105,105,105,105,105,105,105,105,105,105,53,53,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,102	},
			{102,105,105,105,105,105,105,105,105,105,105,105,105,105,53,53,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,102	},
			{102,105,105,105,105,105,105,105,105,105,105,105,105,105,53,53,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,102	},
			{102,102,102,102,102,102,102,102,102,102,102,102,102,102,53,53,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102	}

		};
}

Stage::Stage()
{
	hImage = LoadGraph("Image/bg.png");
	assert(hImage >= 0);
    
	imageSize = { 32,32 };
	
}

Stage::~Stage()
{
	if (hImage != -1)
	{
		DeleteGraph(hImage);
		hImage = -1;
	}
}

void Stage::Update()
{
}

void Stage::Draw()
{
	const int TileColumnCount = 16;

	if (hImage != -1)
	{
		for (int j = 0; j < MAP_HEIGHT; j++)
		{
			for (int i = 0; i < MAP_WIDTH; i++)
			{

				int kx = imageSize.x * (myMap[j][i] % TileColumnCount);
				int ky = imageSize.y * (myMap[j][i] / TileColumnCount);
				DrawRectGraph(i*imageSize.x, j*imageSize.y, kx, ky, imageSize.x, imageSize.y, hImage, TRUE);

			}
		}
	}
	//DrawRectGraph( position.x, position.y, 0, 0, imageSize.x, imageSize.y, hImage, TRUE);
}
